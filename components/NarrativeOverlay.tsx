"use client"

import { useEffect, useState } from "react"
import { Card } from "@/components/ui/card"
import { X, AlertTriangle, Zap } from "lucide-react"

interface NarrativeOverlayProps {
  roomId: string
  onDismiss: () => void
}

export function NarrativeOverlay({ roomId, onDismiss }: NarrativeOverlayProps) {
  const [visible, setVisible] = useState(true)

  const narratives: Record<string, { title: string; text: string; icon: string; urgency: string; objective: string }> =
    {
      R1: {
        icon: "üö®",
        title: "SALLE DE CONTR√îLE",
        urgency: "NIVEAU CO‚ÇÇ : 1000 PPM - SEUIL D'ALERTE ATTEINT",
        text: "Le syst√®me d'alarme vient de se d√©clencher. Les capteurs indiquent une concentration de CO‚ÇÇ de 1000 ppm dans le b√¢timent - le seuil d'alerte est franchi. √Ä ce niveau, les occupants commencent √† ressentir de la fatigue et une baisse de concentration. Vous devez activer les 4 ventilations d'urgence SIMULTAN√âMENT pour stabiliser temporairement la situation.",
        objective:
          "üéØ Objectif : Activez les 2 switches en m√™me temps ET entrez le code du panneau CO‚ÇÇ dans la console",
      },
      R2: {
        icon: "üî¨",
        title: "LABORATOIRE DE FILTRATION",
        urgency: "SYST√àME DE FILTRATION HORS SERVICE",
        text: "Le syst√®me de filtration multi-√©tages est compl√®tement bloqu√©. Les filtres fonctionnent en cascade : pr√©-filtre ‚Üí filtre HEPA ‚Üí filtre √† charbon actif. Si vous activez les valves dans le mauvais ordre, la diff√©rence de pression peut endommager les filtres. Consultez le guide de s√©quence pour conna√Ætre l'ordre correct.",
        objective:
          "üéØ Objectif : Activez les 3 valves dans le bon ordre (V2‚ÜíV3‚ÜíV1) ET placez les poids sur les plaques",
      },
      R3: {
        icon: "üí®",
        title: "BAIE DE VENTILATION PRINCIPALE",
        urgency: "PURGE DU SYST√àME HVAC REQUISE",
        text: "Le syst√®me HVAC principal n√©cessite une purge compl√®te pour √©liminer l'air vici√© accumul√©. La proc√©dure de purge doit suivre une s√©quence pr√©cise avec des fen√™tres temporelles strictes. Une fois la s√©quence lanc√©e, vous avez 2.5 secondes entre chaque √©tape. La confirmation finale n√©cessite deux techniciens positionn√©s aux extr√©mit√©s oppos√©es de la salle.",
        objective:
          "üéØ Objectif : Activez les boutons A‚ÜíB‚ÜíC dans l'ordre, puis confirmez avec les 2 switches simultan√©ment",
      },
      EXIT: {
        icon: "‚úÖ",
        title: "PORTE D'√âVACUATION",
        urgency: "SYST√àME RESTAUR√â - √âVACUATION S√âCURIS√âE",
        text: "F√©licitations ! Vous avez r√©ussi √† restaurer le syst√®me de ventilation. Les niveaux de CO‚ÇÇ redescendent progressivement vers des valeurs normales (< 800 ppm). Vous avez collect√© 3 fragments de code lors de votre progression. Combinez-les dans l'ordre des salles (R1‚ÜíR2‚ÜíR3) pour former le code final et d√©verrouiller la sortie.",
        objective: "üéØ Objectif : Entrez le code final form√© des 3 fragments (format : XXX)",
      },
    }

  const narrative = narratives[roomId]

  useEffect(() => {
    const timer = setTimeout(() => {
      setVisible(false)
      setTimeout(onDismiss, 300)
    }, 12000)

    return () => clearTimeout(timer)
  }, [onDismiss])

  if (!narrative || !visible) return null

  return (
    <div
      className="fixed inset-0 z-50 flex items-center justify-center bg-black/70 backdrop-blur-sm animate-in fade-in duration-300"
      onClick={() => {
        setVisible(false)
        setTimeout(onDismiss, 300)
      }}
    >
      <Card className="max-w-3xl w-full mx-4 p-8 bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900 border-4 border-yellow-500 shadow-2xl animate-in slide-in-from-bottom duration-500">
        <button
          onClick={(e) => {
            e.stopPropagation()
            setVisible(false)
            setTimeout(onDismiss, 300)
          }}
          className="absolute top-4 right-4 text-white/70 hover:text-white transition-colors bg-black/30 rounded-full p-2"
        >
          <X className="w-6 h-6" />
        </button>

        <div className="space-y-6 text-white">
          <div className="text-center border-b-2 border-yellow-500/30 pb-4">
            <div className="text-7xl mb-4 animate-pulse">{narrative.icon}</div>
            <h2 className="text-4xl font-bold text-yellow-400 mb-2">{narrative.title}</h2>
            <div className="flex items-center justify-center gap-2 text-red-400 font-semibold text-lg">
              <AlertTriangle className="w-5 h-5 animate-pulse" />
              {narrative.urgency}
              <AlertTriangle className="w-5 h-5 animate-pulse" />
            </div>
          </div>

          <div className="bg-black/40 rounded-lg p-6 border-2 border-cyan-500/30">
            <p className="text-lg leading-relaxed text-cyan-50">{narrative.text}</p>
          </div>

          <div className="bg-gradient-to-r from-green-900/40 to-blue-900/40 rounded-lg p-5 border-2 border-green-500/50">
            <div className="flex items-start gap-3">
              <Zap className="w-6 h-6 text-green-400 flex-shrink-0 mt-1" />
              <div>
                <p className="text-xl font-bold text-green-400 mb-2">OBJECTIF DE LA SALLE</p>
                <p className="text-lg text-green-100">{narrative.objective}</p>
              </div>
            </div>
          </div>

          <div className="text-center pt-4">
            <div className="inline-block bg-yellow-500/20 border border-yellow-500/50 rounded-lg px-6 py-3">
              <p className="text-sm text-yellow-300 font-semibold">
                ‚è±Ô∏è Cliquez n'importe o√π pour continuer (fermeture auto dans 12s)
              </p>
            </div>
          </div>
        </div>
      </Card>
    </div>
  )
}
